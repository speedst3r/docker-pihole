name: check-pihole-version

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  check_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
          fetch-depth: 0
      - name: Check Official Pi-Hole docker release
        id: piholedocker
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: pi-hole
          repo: docker-pi-hole
      - name: Check local repo release
        id: localdocker
        run: |
          LOCALTAG="$(git tag --sort v:refname | tail -n 1)"
          echo "::set-output name=localver::$LOCALTAG"
    outputs:
      piholever: ${{ steps.piholedocker.outputs.release }}
      localver: ${{ steps.localdocker.outputs.localver }}

  update_docker:
    runs-on: ubuntu-latest
    needs: check_version
    if: ${{ needs.check_version.outputs.piholever != needs.check_version.outputs.localver }}
    steps: 
      - name: Check Pi-hole core version
        id: pihole
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: pi-hole
          repo: pi-hole
      - name: Check Pi-hole FTL version
        id: ftl
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: pi-hole
          repo: FTL
      - name: Check Pi-hole Web version
        id: adminweb
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: pi-hole
          repo: AdminLTE
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: development
          fetch-depth: 0
          token: ${{ secrets.PAT }}
      - name: Update Dockerfile
        id: update
        run: |
          sed -i -E "s/FTL_VERSION=v[0-9]+\.[0-9]+(\.[0-9]+)*/FTL_VERSION=${{ steps.ftl.outputs.release }}/g;s/WEB_VERSION=v[0-9]+\.[0-9]+(\.[0-9]+)*/WEB_VERSION=${{ steps.adminweb.outputs.release }}/g;s/CORE_VERSION=v[0-9]+\.[0-9]+(\.[0-9]+)*/CORE_VERSION=${{ steps.pihole.outputs.release }}/g" Dockerfile 
      - name: Commit and tag
        uses: EndBug/add-and-commit@v4
        with:
          message: "Release ${{ needs.check_version.outputs.piholever }}"
          add: "Dockerfile"
          tag: ${{ needs.check_version.outputs.piholever }}
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.check_version.outputs.piholever }}
          token: ${{ secrets.PAT }}
